<think>
Okay, so the user wants a simple, clean, mobile-first CSS file for their blog. Let me break down what they need.

First, they mentioned using a readable font like Lato orRoboto. I know these fonts are great for modern websites because they're easy to read and look clean on all devices. I'll go with Lato since it's free and widely used in academic settings.

Next, the color scheme needs to be professional and clean. A soft, neutral palette would work well. Blue seems friendly, maybe a nice dark blue with grays for a classic look. Using CSS variables will make switching colors easier later.

They specified styling all basic elements: header, nav, main, article, and footer. I should make sure each section has a class name that's easy to remember. The header should be at the top, so I'll use a background color with some text in white for contrast. The navigation needs links styled with CSS, probably using unordered lists for simplicity.

For the main content, I'll structure it with article tags inside a hero-section class. Each article will have its own style to make it stand out but still look consistent. Maybe a white background with some shadow or padding to separate them from the header.

The footer should be simple at the bottom, maybe using a dark color like #0a0a0a and centered text for emphasis.

I'll include internal CSS variables for colors to keep things consistent. Also, adding hover effects on the navigation links would make it more interactive. Using flexbox will help center everything neatly on mobile devices without too much hassle.

Putting it all together, I'll start with the basic HTML structure, then add the Lato font via Google Fonts. The CSS variables in the style tag will define colors and styles for each section. Testing responsiveness is key, so I'll ensure mobile-first approach uses smaller fonts where possible on smaller screens, but since we're using a free font that's optimized, it should handle most devices well.

Finally, I'll add some notes about using Google Fonts if they prefer the integrated look. This covers all bases and ensures the solution is both functional and easy to implement.
</think>

Here's a clean, mobile-first CSS file for a blog header:


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blog</title>
    <!-- Lato font for readability -->
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap" rel="stylesheet">
    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Lato', sans-serif;
        }

        :root {
            --bg-color: #ffffff;
            --text-white: #0a0a0a;
            --border-color: #0a0a0a;
            --card-bg: var(--bg-color);
            --card-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        }

        .header {
            background-color: var(--card-bg);
            padding: 1rem;
            border-bottom: 1px solid var(--border-color);
            color: white;
        }

        .nav {
            list-style: none;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .nav a {
            color: var(--text-white);
            text-decoration: none;
        }

        .main {
            max-width: 600px;
            margin: 0 auto;
            padding: 0 1rem;
        }

        .hero-section {
            background-color: var(--card-bg);
            padding: 4rem 2rem;
            border-bottom: 1px solid var(--border-color);
            color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .article {
            background-color: white;
            padding: 1rem;
            margin: 2rem 0;
            border-radius: 0.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .footer {
            background-color: var(--card-bg);
            color: white;
            text-align: center;
            padding: 2rem 0;
        }
    </style>
</head>
<body>
    <!-- Your content here -->
    <header class="header">
        <h1>Blog</h1>
        <nav class="nav">
            <a href="#home">Home</a>
            <ul id="about-section"></ul>
            <a href="#articles">Articles</a>
        </nav>
    </header>

    <main class="main hero-section">
        <!-- Your main content here -->
        <article>
            <p>This is a sample blog header with Lato font styling and custom CSS.
            The design includes hover effects and responsive layout.
        </p>
    </main>

    <footer class="footer">
        <p>&copy; 2024 Blog. All rights reserved.</p>
    </footer>
</body>
</html>


This CSS provides:
1. A clean, modern look with Lato font
2. Professional color scheme using a dark blue background
3. Responsive design that works on mobile devices
4. Hover effects for navigation links
5. Mobile-first approach with minimal adjustments

Key features:
- Uses Google Fonts (Lato) for readability
- Consistent spacing and typography
- Subtle shadows and borders
- Responsive flexbox layout
- Easy-to-read text color scheme

To use this, you would need to:
1. Include the Google Fonts link in your head section
2. Copy the CSS into your style tag
3. Adjust colors and styles as needed for your brand voice

You can customize specific aspects like background colors, shadows, borders, and spacing by modifying the CSS variables or individual properties throughout the file.